---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alerta-helm.fullname" . }}-read
  labels:
    app: {{ include "alerta-helm.fullname" . }}-read
    {{- include "alerta-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.read.autoscaling.enabled }}
  replicas: {{ .Values.read.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "alerta-helm.fullname" . }}-read
      {{- include "alerta-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/alerta-configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "alerta-helm.fullname" . }}-read
        {{- include "alerta-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "alerta-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: alerta-config
          configMap:
            name: {{ include "alerta-helm.fullname" . }}-config
      containers:
        - name: {{ include "alerta-helm.fullname" . }}-read
          env:
            {{- if .Values.postgresql.enabled }}
            - name: DATABASE_URL
              value: postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ include "alerta-helm.fullname" . }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresqlDatabase }}
            {{- else }}
            - name: DATABASE_URL
              value: {{ .Values.database.url }}
            {{- end }}
            - name: ALERTA_SVR_CONF_FILE
              value: /etc/alerta/alertad.conf
            {{- with .Values.read.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          image: "{{ .Values.read.image.repository }}:{{ .Values.read.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: {{ include "alerta-helm.fullname" . }}-read
              containerPort: {{ .Values.read.service.port }}
              protocol: TCP
          volumeMounts:
            - name: alerta-config
              mountPath: /etc/alerta/alertad.conf
              subPath: alertad.conf
              readOnly: true
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}